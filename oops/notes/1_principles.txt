    
    ### หัวใจหลักของ OOP

    # Abstraction
    เป็นการซ่อน Attribute และ Behaviours ทุกอย่างที่ไม่เกี่ยวข้องกับ object เพื่อลดความซับซ้อน
    และเพิ่มประสิทธิภาพในการทำงาน

    # Encapsulation
    เป็นการห่อหุ้มข้อมูลเพื่อให้ผู็อื่นเห็นเท่าที่จำเป็น โดยสิ่งที่นำมาห่อไว้นั้น เราเรียกว่า interface
    เป็นการกำหนด interface ของ object ทั้ง method และ data ให้ object อื่น ๆ มองเห็นเท่าที่จำเป็นเท่านั้น

    # Inheritance
    ในทางวิศวกรรม เรามีผลิตภัณฑ์อยู่แล้ว และเรากำลังจะสร้างผลิตภัณฑ์ใหม่ที่คล้ายกัน
    เราก็แค่สืบทอดความสามารถของผลิตภัณฑ์ที่มีอยู่แล้ว ไปให้ตัวใหม่ โดยในตัวใหม่สาอาจจะเพิ่มความสามารถพิเศษบางอย่างเข้าไป
    ที่ไม่เหมือนกับในผลิตภัณฑ์เดิม

    # Polymorephism 
    หมายถึงการมีได้กลายรูปแบบ
    โดยในทางการเขียนโปรแกรมเชิงวัตถุ ก็คือการสร้าง object ที่มีการสืบทอดมาจาก Super class แต่จะมีการกำหนดการทำงานใหม่
    ให้กับ method เพื่อให้ตรงกับวัตถุประสงค์ของคลาสนั้น
    
    ### หลักการของ OOP (Object Oriented Programming) หรือการเขียนโปรแกรมเชิงวัตถุ
        - เราจะมองว่าทุกอย่างเป็น Object โดย object แต่ละตัวจะมีหน้าที่และความสามารถที่แตกต่างกัน
        - โปรแกรมก็คือการนำกลุ่มของ object ย่อย ๆ มาทำงานด้วยกัน
        - แต่ละ object เป็น instance ของ class
        - แต่ละ object มีสถานะของตัวเอง
        - object ที่ถูกสร้างมาจาก class เดียวกัน จะมีคุณสมบัติและความสามารถที่เหมือนกัน


    # class
        - เป็นต้นแบบของ object 
        - ให้มองว่า class เป็น data type ประเภทหนึ่ง ที่รวมเอา Data (Properties) และ Behaviors (Methods) เข้ามาไว้ด้วยกัน
        - object ก็คือ instance ของ class
        - สิ่งที่ควรเป็น class ได้แก่ เป็นคำนาม เช่น รถยนต์ คน หนังสือ
        - มีคุณสมบัติและความสามารถเฉพาะ